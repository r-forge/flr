\documentclass{beamer}% usefull options [handout]
\usepackage{graphicx}
\usepackage{amsmath}
%\useoutertheme{infolines}
\usetheme{Hannover}% other nice themes Hannover, CambridgeUS, AnnArbor, Madrid, PaloAlto, Malmoe, Rochester 
\usecolortheme{beetle}% other options "dove"
\usefonttheme{structuresmallcapsserif}
\setbeamertemplate{items}[triangle] % other options "circle", "ball", "square"
%\setbeamertemplate{blocks}[rounded][shadow=true]
%\setbeamertemplate{navigation symbols}{}
%\useoutertheme[height=20pt]{sidebar}
% NOTE: this theme inverts colors, if one wants to use common colors it's necessary
% to comment the code on the chunk about lattice settings  
\setbeamercolor{normal text}{fg=white,bg=black}% inverted black background white foreground
\setbeamercolor*{palette sidebar secondary}{fg=white}

%************ Title & Author ***********************
\title[Introduction to FLCore]{Introduction to the FLCore package}
\author{FLR Core Team}

\begin{document}
%===========================================
% some code we need 
%===========================================
<<echo=FALSE>>=
source("run.R")
@

%*******************************************
\begin{frame}%[plain]
\titlepage
\begin{flushright}
	\includegraphics[width=0.1\textwidth]{cc.png}
\end{flushright}
\end{frame}

%*******************************************
\begin{frame}
\frametitle{Outline}
\tableofcontents[pausesections]
\end{frame}

%===========================================
% INTRODUCTION
%===========================================
\section{Introduction}
%*******************************************
\begin{frame}
\frametitle{FLCore structure}

Follows S4 paradigm with structured data implemented as classes and several methods to apply on objects of the classes.
	\begin{itemize}
		\item<2-> Classes - empty definitions of data
		\item<3-> Objects - instances of the classes which have data following the class definition
		\item<4-> Methods - implementation of actions to be executed on objects depending on its class
		%\newline\newline
		%\item<5-> Documentation - as man pages or vignettes
		%\item<6-> Tests - code that runs during compilation to check code 
      \end{itemize}
\end{frame}

%*******************************************
\begin{frame}
  \frametitle{Inside FLCore}
	\begin{itemize}
		\item<2-> Basic classes:\newline FLArray, FLQuant, FLCohort, FLQuantPoint, FLPar
		\item<3-> Composite classes:\newline FLComp, FLBiol, FLCatch, FLFleet, FLIndex, FLMetier, FLModel, FLStock
		\item<4-> Lists of classes:\newline FLLst, FLBiols, FLCatches, FLCohorts, FLFleets, FLIndices, FLMetiers, FLQuants, FLStocks 
		\item<5-> Model class:\newline FLModel, FLGrowth, FLSR
		\item<6-> Methods
	\end{itemize}
\end{frame}

%===========================================
% BASIC CLASSES
%===========================================
\section{Basic classes}
%*******************************************
\begin{frame}[containsverbatim]
  \frametitle{Basic classes}

\scriptsize{
<<results=tex,echo=FALSE>>=
xtable(subset(FLCcls, parent %in% c("FLArray", "FLQuant") | class=="FLArray")[,-1])
@
}

\end{frame}

%-------------------------------------------
% FLQuant
%-------------------------------------------
%*******************************************
\begin{frame}
  \frametitle{FLQuant}

Six dimensional array used to store data of a particular type (e.g. catch numbers).\newline

Dimensions are:
      \begin{enumerate}
	 \item<2-> User defined (age, length etc.)
	 \item<3-> Year
	 \item<4-> Unit (substocks, male/female)
	 \item<5-> Season
	 \item<6-> Area
	 \item<7-> Iter
      \end{enumerate}
\end{frame}

%***********************************
\begin{frame}[containsverbatim]

  \frametitle{FLQuant example}

{\tiny{
<<results=verbatim,echo=TRUE>>=
flq <- window(landings.n(ple4),start=1995, end = 2001)
dimnames(flq)
@ %def 
}}

\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLQuant methods}

{\tiny{
<<results=verbatim,echo=TRUE>>=
getClassMethods("FLQuant", "package:FLCore")
@ %def 
}}

\end{frame}

%-------------------------------------------
% FLQuantPoint
%-------------------------------------------
%*******************************************
\begin{frame}[containsverbatim]
  \frametitle{FLQuantPoint}

Six dimensional array used to summarize FLQuant objects.\newline

{\tiny{
<<results=verbatim>>=
dimnames(FLQuantPoint(flq))
@ %def 
}}

\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLQuantPoint methods}

{\tiny{
<<results=verbatim>>=
getClassMethods("FLQuantPoint", "package:FLCore")
@ %def 
}}

\end{frame}

%-------------------------------------------
% FLCohort
%-------------------------------------------
%*******************************************
\begin{frame}[containsverbatim]
  \frametitle{FLCohort}

Six dimensional array used to store cohort data.\newline

{\tiny{
<<results=verbatim>>=
dimnames(FLCohort(flq))
@ %def 
}}

\end{frame}

%*******************************************
\begin{frame}[containsverbatim]
  \frametitle{FLCohort example}

{\tiny{
<<results=verbatim>>=
flq[1:4,1:5]
FLCohort(flq[1:4,1:5])
@ %def 
}}

\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLCohort methods}

{\tiny{
<<results=verbatim>>=
getClassMethods("FLCohort", "package:FLCore")
@ %def 
}}

\end{frame}

%-------------------------------------------
% FLPar
%-------------------------------------------
%*******************************************
\begin{frame}[containsverbatim]
  \frametitle{FLPar}

A two dimensional array used to store parameter's data.\newline

{\tiny{
<<results=verbatim>>=
dimnames(new("FLPar"))
@ %def 
}}

\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLPar methods}

{\tiny{
<<results=verbatim>>=
getClassMethods("FLPar", "package:FLCore")
@ %def 
}}

\end{frame}

%===========================================
% COMPOSITE CLASSES
%===========================================
\section{Composite classes}
%*******************************************
\begin{frame}[containsverbatim]
  \frametitle{Composite classes}

Classes that use FLQuant classes to define their slots.

\scriptsize{
<<results=tex,echo=FALSE>>=
xtable(subset(FLCcls, parent=="FLComp" & class!="FLModel")[,-1])
@
}

\end{frame}

%-------------------------------------------
% FLStock
%-------------------------------------------
%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLStock}
Represents a fish stock and comprises a number of slots.
{\tiny{
<<results=verbatim,echo=TRUE>>=
showClass("FLStock")
@ %def 
}}
\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLStock example}
{\tiny{
<<results=verbatim,echo=TRUE>>=
summary(ple4)
@ %def 
}}
\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLStock methods}

{\tiny{
<<results=verbatim>>=
getClassMethods("FLStock", "package:FLCore")
@ %def 
}}

\end{frame}

%%***************************************
\begin{frame}
  \frametitle{FLStock plot}

<<fig=TRUE, echo=FALSE>>=
print(plot(ple4))
@ %def 

\end{frame}

%-------------------------------------------
% FLBiol
%-------------------------------------------
%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLBiol}
Represents a biological population
{\tiny{
<<results=verbatim,echo=TRUE>>=
showClass("FLBiol")
@ %def 
}}

\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLBiol example}
{\tiny{
<<results=verbatim,echo=TRUE>>=
summary(flbiol)
@ %def 
}}
\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLBiol methods}

{\tiny{
<<results=verbatim>>=
getClassMethods("FLBiol", "package:FLCore")
@ %def 
}}

\end{frame}

%***************************************
\begin{frame}
  \frametitle{FLBiol plot}

<<fig=TRUE, echo=FALSE>>=
print(plot(flbiol))
@ %def 

\end{frame}

%-------------------------------------------
% FLIndex
%-------------------------------------------
%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLIndex}
Represents a index (e.g. index of abundance from a survey)
{\tiny{
<<results=verbatim,echo=TRUE>>=
showClass("FLIndex")
@ %def 
}}

\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLIndex example}
{\tiny{
<<results=verbatim,echo=TRUE>>=
summary(ple4.index)
@ %def 
}}
\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLIndex methods}

{\tiny{
<<results=verbatim>>=
getClassMethods("FLIndex", "package:FLCore")
@ %def 
}}

\end{frame}

%***************************************
\begin{frame}
  \frametitle{FLBiol plot}

<<fig=TRUE, echo=FALSE>>=
print(plot(ple4.index))
@ %def 

\end{frame}

%-------------------------------------------
% FLCatch
%-------------------------------------------
%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLCatch}
Represents the catch of a fleet
{\tiny{
<<results=verbatim,echo=TRUE>>=
showClass("FLCatch")
@ %def 
}}

\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLIndex example}
{\tiny{
<<results=verbatim,echo=TRUE>>=
summary(bt4[["TBB"]][["ple"]])
@ %def 
}}
\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLCatch methods}

{\tiny{
<<results=verbatim>>=
getClassMethods("FLCatch", "package:FLCore")
@ %def 
}}

\end{frame}

%-------------------------------------------
% FLMetier
%-------------------------------------------
%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLMetier}
Represents a fleet's metier (classification of activity targeting a species or group of species, in a specific period and area, with a particular gear)
{\tiny{
<<results=verbatim,echo=TRUE>>=
showClass("FLMetier")
@ %def 
}}

\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLMetier example}
{\tiny{
<<results=verbatim,echo=TRUE>>=
summary(bt4[["TBB"]])
@ %def 
}}
\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLMetier methods}

{\tiny{
<<results=verbatim>>=
getClassMethods("FLMetier", "package:FLCore")
@ %def 
}}

\end{frame}

%-------------------------------------------
% FLFleet
%-------------------------------------------
%***************************************
\begin{frame}
  \frametitle{FLFleet}
A more complicated class with three levels: Fleet, Metier and Catch
   \begin{center}
      \includegraphics[width=1\textwidth]{FLFleet.png}
   \end{center}
\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLFleet}
{\tiny{
<<results=verbatim,echo=TRUE>>=
showClass("FLFleet")
@ %def 
}}

\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLFleet example}
{\tiny{
<<results=verbatim,echo=TRUE>>=
summary(bt4)
@ %def 
}}
\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLFleet methods}

{\tiny{
<<results=verbatim>>=
getClassMethods("FLFleet", "package:FLCore")
@ %def 
}}

\end{frame}

%===========================================
% LIST CLASSES
%===========================================
\section{List classes}
%*******************************************
\begin{frame}[containsverbatim]
  \frametitle{List classes}

\scriptsize{
<<results=tex,echo=FALSE>>=
xtable(subset(FLCcls, parent=="FLlst")[,-1])
@
}

\end{frame}

%-------------------------------------------
% FLlst
%-------------------------------------------
%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLlist}
A list of other classes
{\tiny{
<<results=verbatim,echo=TRUE>>=
showClass("FLlst")
@ %def 
}}

\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLlst example \#1}
{\tiny{
<<results=verbatim,echo=TRUE>>=
summary(ple4.indices)
@ %def 
}}
\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLlst example \#2}
{\tiny{
<<results=verbatim,echo=TRUE>>=
flqs <- FLQuants(f1=catch(ple4), f2=landings(ple4))
summary(flqs)
@ %def 
}}
\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLlst methods}

{\tiny{
<<results=verbatim>>=
getClassMethods("FLlst", "package:FLCore")
@ %def 
}}

\end{frame}

%===========================================
% MODEL CLASSES
%===========================================
\section{Model classes}
%*******************************************
\begin{frame}[containsverbatim]
  \frametitle{Model classes}

\scriptsize{
<<results=tex,echo=FALSE>>=
xtable(subset(FLCcls, parent=="FLModel")[,-1])
@
}

\end{frame}

%-------------------------------------------
% FLSR
%-------------------------------------------
%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLSR}
Represents a stock-recruitment relationship and allows the estimation of its parameters.
{\tiny{
<<results=verbatim,echo=TRUE>>=
showClass("FLSR")
@ %def 
}}
\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLSR example}
{\tiny{
<<results=verbatim,echo=TRUE>>=
summary(nsher)
@ %def 
}}
\end{frame}

%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLSR methods}

{\tiny{
<<results=verbatim, echo=TRUE>>=
getClassMethods("FLSR", "package:FLCore")
@ %def 
}}

\end{frame}

%%***************************************
\begin{frame}[containsverbatim]
  \frametitle{FLSR plot}

<<fig=TRUE, echo=FALSE>>=
print(pltSR(nsher))
@ %def 

\end{frame}
%************ Frame 15***********************
\begin{frame}
  \frametitle{Slot accessors}
      \begin{itemize}
	 \item<2-> Try to avoid using @ to access slots
	 \item<3-> Use accessors instead
	 \item<4-> e.g. landings.n(stock) not stock@landings.n
	 \item<5-> Protects against internal changes
	 \item<6-> e.g. catch slots removed from FLCatch
	 \item<7-> But accessor catch() still works
      \end{itemize}
\end{frame}
\end{document}

